{
  "properties": {
    "accessKey": "string",
    "accessKeyLabel": "string",
    "autocapitalize": "string",
    "dir": "string",
    "draggable": "boolean",
    "hidden": "boolean",
    "inert": "boolean",
    "innerText": "string",
    "lang": "string",
    "offsetHeight": "number",
    "offsetLeft": "number",
    "offsetParent": "Element",
    "offsetTop": "number",
    "offsetWidth": "number",
    "outerText": "string",
    "popover": "string",
    "spellcheck": "boolean",
    "title": "string",
    "translate": "boolean",
    "attributes": "NamedNodeMap",
    "classList": "DOMTokenList",
    "className": "string",
    "clientHeight": "number",
    "clientLeft": "number",
    "clientTop": "number",
    "clientWidth": "number",
    "id": "string",
    "localName": "string",
    "namespaceURI": "string",
    "onfullscreenchange": "(this: Element, ev: Event) => any",
    "onfullscreenerror": "(this: Element, ev: Event) => any",
    "outerHTML": "string",
    "ownerDocument": "Document",
    "part": "DOMTokenList",
    "prefix": "string",
    "scrollHeight": "number",
    "scrollLeft": "number",
    "scrollTop": "number",
    "scrollWidth": "number",
    "shadowRoot": "ShadowRoot",
    "slot": "string",
    "tagName": "string",
    "baseURI": "string",
    "childNodes": "NodeListOf<ChildNode>",
    "firstChild": "ChildNode",
    "isConnected": "boolean",
    "lastChild": "ChildNode",
    "nextSibling": "ChildNode",
    "nodeName": "string",
    "nodeType": "number",
    "nodeValue": "string",
    "parentElement": "HTMLElement",
    "parentNode": "ParentNode",
    "previousSibling": "ChildNode",
    "textContent": "string",
    "ELEMENT_NODE": "1",
    "ATTRIBUTE_NODE": "2",
    "TEXT_NODE": "3",
    "CDATA_SECTION_NODE": "4",
    "ENTITY_REFERENCE_NODE": "5",
    "ENTITY_NODE": "6",
    "PROCESSING_INSTRUCTION_NODE": "7",
    "COMMENT_NODE": "8",
    "DOCUMENT_NODE": "9",
    "DOCUMENT_TYPE_NODE": "10",
    "DOCUMENT_FRAGMENT_NODE": "11",
    "NOTATION_NODE": "12",
    "DOCUMENT_POSITION_DISCONNECTED": "1",
    "DOCUMENT_POSITION_PRECEDING": "2",
    "DOCUMENT_POSITION_FOLLOWING": "4",
    "DOCUMENT_POSITION_CONTAINS": "8",
    "DOCUMENT_POSITION_CONTAINED_BY": "16",
    "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": "32",
    "ariaAtomic": "string",
    "ariaAutoComplete": "string",
    "ariaBusy": "string",
    "ariaChecked": "string",
    "ariaColCount": "string",
    "ariaColIndex": "string",
    "ariaColSpan": "string",
    "ariaCurrent": "string",
    "ariaDisabled": "string",
    "ariaExpanded": "string",
    "ariaHasPopup": "string",
    "ariaHidden": "string",
    "ariaInvalid": "string",
    "ariaKeyShortcuts": "string",
    "ariaLabel": "string",
    "ariaLevel": "string",
    "ariaLive": "string",
    "ariaModal": "string",
    "ariaMultiLine": "string",
    "ariaMultiSelectable": "string",
    "ariaOrientation": "string",
    "ariaPlaceholder": "string",
    "ariaPosInSet": "string",
    "ariaPressed": "string",
    "ariaReadOnly": "string",
    "ariaRequired": "string",
    "ariaRoleDescription": "string",
    "ariaRowCount": "string",
    "ariaRowIndex": "string",
    "ariaRowSpan": "string",
    "ariaSelected": "string",
    "ariaSetSize": "string",
    "ariaSort": "string",
    "ariaValueMax": "string",
    "ariaValueMin": "string",
    "ariaValueNow": "string",
    "ariaValueText": "string",
    "role": "string",
    "innerHTML": "string",
    "nextElementSibling": "Element",
    "previousElementSibling": "Element",
    "childElementCount": "number",
    "children": "HTMLCollection",
    "firstElementChild": "Element",
    "lastElementChild": "Element",
    "assignedSlot": "HTMLSlotElement",
    "attributeStyleMap": "StylePropertyMap",
    "style": "CSSStyleDeclaration",
    "contentEditable": "string",
    "enterKeyHint": "string",
    "inputMode": "string",
    "isContentEditable": "boolean",
    "onabort": "(this: GlobalEventHandlers, ev: UIEvent) => any",
    "onanimationcancel": "(this: GlobalEventHandlers, ev: AnimationEvent) => any",
    "onanimationend": "(this: GlobalEventHandlers, ev: AnimationEvent) => any",
    "onanimationiteration": "(this: GlobalEventHandlers, ev: AnimationEvent) => any",
    "onanimationstart": "(this: GlobalEventHandlers, ev: AnimationEvent) => any",
    "onauxclick": "(this: GlobalEventHandlers, ev: MouseEvent) => any",
    "onbeforeinput": "(this: GlobalEventHandlers, ev: InputEvent) => any",
    "onblur": "(this: GlobalEventHandlers, ev: FocusEvent) => any",
    "oncancel": "(this: GlobalEventHandlers, ev: Event) => any",
    "oncanplay": "(this: GlobalEventHandlers, ev: Event) => any",
    "oncanplaythrough": "(this: GlobalEventHandlers, ev: Event) => any",
    "onchange": "(this: GlobalEventHandlers, ev: Event) => any",
    "onclick": "(this: GlobalEventHandlers, ev: MouseEvent) => any",
    "onclose": "(this: GlobalEventHandlers, ev: Event) => any",
    "oncontextmenu": "(this: GlobalEventHandlers, ev: MouseEvent) => any",
    "oncopy": "(this: GlobalEventHandlers, ev: ClipboardEvent) => any",
    "oncuechange": "(this: GlobalEventHandlers, ev: Event) => any",
    "oncut": "(this: GlobalEventHandlers, ev: ClipboardEvent) => any",
    "ondblclick": "(this: GlobalEventHandlers, ev: MouseEvent) => any",
    "ondrag": "(this: GlobalEventHandlers, ev: DragEvent) => any",
    "ondragend": "(this: GlobalEventHandlers, ev: DragEvent) => any",
    "ondragenter": "(this: GlobalEventHandlers, ev: DragEvent) => any",
    "ondragleave": "(this: GlobalEventHandlers, ev: DragEvent) => any",
    "ondragover": "(this: GlobalEventHandlers, ev: DragEvent) => any",
    "ondragstart": "(this: GlobalEventHandlers, ev: DragEvent) => any",
    "ondrop": "(this: GlobalEventHandlers, ev: DragEvent) => any",
    "ondurationchange": "(this: GlobalEventHandlers, ev: Event) => any",
    "onemptied": "(this: GlobalEventHandlers, ev: Event) => any",
    "onended": "(this: GlobalEventHandlers, ev: Event) => any",
    "onerror": "OnErrorEventHandlerNonNull",
    "onfocus": "(this: GlobalEventHandlers, ev: FocusEvent) => any",
    "onformdata": "(this: GlobalEventHandlers, ev: FormDataEvent) => any",
    "ongotpointercapture": "(this: GlobalEventHandlers, ev: PointerEvent) => any",
    "oninput": "(this: GlobalEventHandlers, ev: Event) => any",
    "oninvalid": "(this: GlobalEventHandlers, ev: Event) => any",
    "onkeydown": "(this: GlobalEventHandlers, ev: KeyboardEvent) => any",
    "onkeypress": "(this: GlobalEventHandlers, ev: KeyboardEvent) => any",
    "onkeyup": "(this: GlobalEventHandlers, ev: KeyboardEvent) => any",
    "onload": "(this: GlobalEventHandlers, ev: Event) => any",
    "onloadeddata": "(this: GlobalEventHandlers, ev: Event) => any",
    "onloadedmetadata": "(this: GlobalEventHandlers, ev: Event) => any",
    "onloadstart": "(this: GlobalEventHandlers, ev: Event) => any",
    "onlostpointercapture": "(this: GlobalEventHandlers, ev: PointerEvent) => any",
    "onmousedown": "(this: GlobalEventHandlers, ev: MouseEvent) => any",
    "onmouseenter": "(this: GlobalEventHandlers, ev: MouseEvent) => any",
    "onmouseleave": "(this: GlobalEventHandlers, ev: MouseEvent) => any",
    "onmousemove": "(this: GlobalEventHandlers, ev: MouseEvent) => any",
    "onmouseout": "(this: GlobalEventHandlers, ev: MouseEvent) => any",
    "onmouseover": "(this: GlobalEventHandlers, ev: MouseEvent) => any",
    "onmouseup": "(this: GlobalEventHandlers, ev: MouseEvent) => any",
    "onpaste": "(this: GlobalEventHandlers, ev: ClipboardEvent) => any",
    "onpause": "(this: GlobalEventHandlers, ev: Event) => any",
    "onplay": "(this: GlobalEventHandlers, ev: Event) => any",
    "onplaying": "(this: GlobalEventHandlers, ev: Event) => any",
    "onpointercancel": "(this: GlobalEventHandlers, ev: PointerEvent) => any",
    "onpointerdown": "(this: GlobalEventHandlers, ev: PointerEvent) => any",
    "onpointerenter": "(this: GlobalEventHandlers, ev: PointerEvent) => any",
    "onpointerleave": "(this: GlobalEventHandlers, ev: PointerEvent) => any",
    "onpointermove": "(this: GlobalEventHandlers, ev: PointerEvent) => any",
    "onpointerout": "(this: GlobalEventHandlers, ev: PointerEvent) => any",
    "onpointerover": "(this: GlobalEventHandlers, ev: PointerEvent) => any",
    "onpointerup": "(this: GlobalEventHandlers, ev: PointerEvent) => any",
    "onprogress": "(this: GlobalEventHandlers, ev: ProgressEvent<EventTarget>) => any",
    "onratechange": "(this: GlobalEventHandlers, ev: Event) => any",
    "onreset": "(this: GlobalEventHandlers, ev: Event) => any",
    "onresize": "(this: GlobalEventHandlers, ev: UIEvent) => any",
    "onscroll": "(this: GlobalEventHandlers, ev: Event) => any",
    "onscrollend": "(this: GlobalEventHandlers, ev: Event) => any",
    "onsecuritypolicyviolation": "(this: GlobalEventHandlers, ev: SecurityPolicyViolationEvent) => any",
    "onseeked": "(this: GlobalEventHandlers, ev: Event) => any",
    "onseeking": "(this: GlobalEventHandlers, ev: Event) => any",
    "onselect": "(this: GlobalEventHandlers, ev: Event) => any",
    "onselectionchange": "(this: GlobalEventHandlers, ev: Event) => any",
    "onselectstart": "(this: GlobalEventHandlers, ev: Event) => any",
    "onslotchange": "(this: GlobalEventHandlers, ev: Event) => any",
    "onstalled": "(this: GlobalEventHandlers, ev: Event) => any",
    "onsubmit": "(this: GlobalEventHandlers, ev: SubmitEvent) => any",
    "onsuspend": "(this: GlobalEventHandlers, ev: Event) => any",
    "ontimeupdate": "(this: GlobalEventHandlers, ev: Event) => any",
    "ontoggle": "(this: GlobalEventHandlers, ev: Event) => any",
    "ontouchcancel": "(this: GlobalEventHandlers, ev: TouchEvent) => any",
    "ontouchend": "(this: GlobalEventHandlers, ev: TouchEvent) => any",
    "ontouchmove": "(this: GlobalEventHandlers, ev: TouchEvent) => any",
    "ontouchstart": "(this: GlobalEventHandlers, ev: TouchEvent) => any",
    "ontransitioncancel": "(this: GlobalEventHandlers, ev: TransitionEvent) => any",
    "ontransitionend": "(this: GlobalEventHandlers, ev: TransitionEvent) => any",
    "ontransitionrun": "(this: GlobalEventHandlers, ev: TransitionEvent) => any",
    "ontransitionstart": "(this: GlobalEventHandlers, ev: TransitionEvent) => any",
    "onvolumechange": "(this: GlobalEventHandlers, ev: Event) => any",
    "onwaiting": "(this: GlobalEventHandlers, ev: Event) => any",
    "onwebkitanimationend": "(this: GlobalEventHandlers, ev: Event) => any",
    "onwebkitanimationiteration": "(this: GlobalEventHandlers, ev: Event) => any",
    "onwebkitanimationstart": "(this: GlobalEventHandlers, ev: Event) => any",
    "onwebkittransitionend": "(this: GlobalEventHandlers, ev: Event) => any",
    "onwheel": "(this: GlobalEventHandlers, ev: WheelEvent) => any",
    "autofocus": "boolean",
    "dataset": "DOMStringMap",
    "nonce": "string",
    "tabIndex": "number"
  },
  "methods": {
    "attachInternals": [
      {
        "parameters": [],
        "return": {
          "text": "ElementInternals"
        }
      }
    ],
    "click": [
      {
        "parameters": [],
        "return": {
          "text": "void"
        }
      }
    ],
    "hidePopover": [
      {
        "parameters": [],
        "return": {
          "text": "void"
        }
      }
    ],
    "showPopover": [
      {
        "parameters": [],
        "return": {
          "text": "void"
        }
      }
    ],
    "togglePopover": [
      {
        "parameters": [
          {
            "name": "force",
            "type": "boolean?"
          }
        ],
        "return": {
          "text": "void"
        }
      }
    ],
    "addEventListener": [
      {
        "parameters": [
          {
            "name": "type",
            "type": "K"
          },
          {
            "name": "listener",
            "type": "(this: HTMLElement, ev: HTMLElementEventMap[K]) => any"
          },
          {
            "name": "options",
            "type": "boolean | AddEventListenerOptions?"
          }
        ],
        "return": {
          "text": "void"
        }
      },
      {
        "parameters": [
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "listener",
            "type": "EventListenerOrEventListenerObject"
          },
          {
            "name": "options",
            "type": "boolean | AddEventListenerOptions?"
          }
        ],
        "return": {
          "text": "void"
        }
      }
    ],
    "removeEventListener": [
      {
        "parameters": [
          {
            "name": "type",
            "type": "K"
          },
          {
            "name": "listener",
            "type": "(this: HTMLElement, ev: HTMLElementEventMap[K]) => any"
          },
          {
            "name": "options",
            "type": "boolean | EventListenerOptions?"
          }
        ],
        "return": {
          "text": "void"
        }
      },
      {
        "parameters": [
          {
            "name": "type",
            "type": "string"
          },
          {
            "name": "listener",
            "type": "EventListenerOrEventListenerObject"
          },
          {
            "name": "options",
            "type": "boolean | EventListenerOptions?"
          }
        ],
        "return": {
          "text": "void"
        }
      }
    ],
    "attachShadow": [
      {
        "parameters": [
          {
            "name": "init",
            "type": "ShadowRootInit"
          }
        ],
        "return": {
          "text": "ShadowRoot"
        }
      }
    ],
    "checkVisibility": [
      {
        "parameters": [
          {
            "name": "options",
            "type": "CheckVisibilityOptions?"
          }
        ],
        "return": {
          "text": "BooleanKeyword"
        }
      }
    ],
    "closest": [
      {
        "parameters": [
          {
            "name": "selector",
            "type": "K"
          }
        ],
        "return": {
          "text": "HTMLElementTagNameMap[K]"
        }
      },
      {
        "parameters": [
          {
            "name": "selector",
            "type": "K"
          }
        ],
        "return": {
          "text": "SVGElementTagNameMap[K]"
        }
      },
      {
        "parameters": [
          {
            "name": "selector",
            "type": "K"
          }
        ],
        "return": {
          "text": "MathMLElementTagNameMap[K]"
        }
      },
      {
        "parameters": [
          {
            "name": "selectors",
            "type": "string"
          }
        ],
        "return": {
          "text": "E"
        }
      }
    ],
    "computedStyleMap": [
      {
        "parameters": [],
        "return": {
          "text": "StylePropertyMapReadOnly"
        }
      }
    ],
    "getAttribute": [
      {
        "parameters": [
          {
            "name": "qualifiedName",
            "type": "string"
          }
        ],
        "return": {
          "text": "string"
        }
      }
    ],
    "getAttributeNS": [
      {
        "parameters": [
          {
            "name": "namespace",
            "type": "string"
          },
          {
            "name": "localName",
            "type": "string"
          }
        ],
        "return": {
          "text": "string"
        }
      }
    ],
    "getAttributeNames": [
      {
        "parameters": [],
        "return": {
          "text": "ArrayType"
        }
      }
    ],
    "getAttributeNode": [
      {
        "parameters": [
          {
            "name": "qualifiedName",
            "type": "string"
          }
        ],
        "return": {
          "text": "Attr"
        }
      }
    ],
    "getAttributeNodeNS": [
      {
        "parameters": [
          {
            "name": "namespace",
            "type": "string"
          },
          {
            "name": "localName",
            "type": "string"
          }
        ],
        "return": {
          "text": "Attr"
        }
      }
    ],
    "getBoundingClientRect": [
      {
        "parameters": [],
        "return": {
          "text": "DOMRect"
        }
      }
    ],
    "getClientRects": [
      {
        "parameters": [],
        "return": {
          "text": "DOMRectList"
        }
      }
    ],
    "getElementsByClassName": [
      {
        "parameters": [
          {
            "name": "classNames",
            "type": "string"
          }
        ],
        "return": {
          "text": "HTMLCollectionOf<Element>"
        }
      }
    ],
    "getElementsByTagName": [
      {
        "parameters": [
          {
            "name": "qualifiedName",
            "type": "K"
          }
        ],
        "return": {
          "text": "HTMLCollectionOf<HTMLElementTagNameMap[K]>"
        }
      },
      {
        "parameters": [
          {
            "name": "qualifiedName",
            "type": "K"
          }
        ],
        "return": {
          "text": "HTMLCollectionOf<SVGElementTagNameMap[K]>"
        }
      },
      {
        "parameters": [
          {
            "name": "qualifiedName",
            "type": "K"
          }
        ],
        "return": {
          "text": "HTMLCollectionOf<MathMLElementTagNameMap[K]>"
        }
      },
      {
        "parameters": [
          {
            "name": "qualifiedName",
            "type": "K"
          }
        ],
        "return": {
          "text": "HTMLCollectionOf<HTMLElementDeprecatedTagNameMap[K]>"
        }
      },
      {
        "parameters": [
          {
            "name": "qualifiedName",
            "type": "string"
          }
        ],
        "return": {
          "text": "HTMLCollectionOf<Element>"
        }
      }
    ],
    "getElementsByTagNameNS": [
      {
        "parameters": [
          {
            "name": "namespaceURI",
            "type": "string"
          },
          {
            "name": "localName",
            "type": "string"
          }
        ],
        "return": {
          "text": "HTMLCollectionOf<HTMLElement>"
        }
      },
      {
        "parameters": [
          {
            "name": "namespaceURI",
            "type": "string"
          },
          {
            "name": "localName",
            "type": "string"
          }
        ],
        "return": {
          "text": "HTMLCollectionOf<SVGElement>"
        }
      },
      {
        "parameters": [
          {
            "name": "namespaceURI",
            "type": "string"
          },
          {
            "name": "localName",
            "type": "string"
          }
        ],
        "return": {
          "text": "HTMLCollectionOf<MathMLElement>"
        }
      },
      {
        "parameters": [
          {
            "name": "namespace",
            "type": "string"
          },
          {
            "name": "localName",
            "type": "string"
          }
        ],
        "return": {
          "text": "HTMLCollectionOf<Element>"
        }
      }
    ],
    "hasAttribute": [
      {
        "parameters": [
          {
            "name": "qualifiedName",
            "type": "string"
          }
        ],
        "return": {
          "text": "BooleanKeyword"
        }
      }
    ],
    "hasAttributeNS": [
      {
        "parameters": [
          {
            "name": "namespace",
            "type": "string"
          },
          {
            "name": "localName",
            "type": "string"
          }
        ],
        "return": {
          "text": "BooleanKeyword"
        }
      }
    ],
    "hasAttributes": [
      {
        "parameters": [],
        "return": {
          "text": "BooleanKeyword"
        }
      }
    ],
    "hasPointerCapture": [
      {
        "parameters": [
          {
            "name": "pointerId",
            "type": "number"
          }
        ],
        "return": {
          "text": "BooleanKeyword"
        }
      }
    ],
    "insertAdjacentElement": [
      {
        "parameters": [
          {
            "name": "where",
            "type": "InsertPosition"
          },
          {
            "name": "element",
            "type": "Element"
          }
        ],
        "return": {
          "text": "Element"
        }
      }
    ],
    "insertAdjacentHTML": [
      {
        "parameters": [
          {
            "name": "position",
            "type": "InsertPosition"
          },
          {
            "name": "text",
            "type": "string"
          }
        ],
        "return": {
          "text": "void"
        }
      }
    ],
    "insertAdjacentText": [
      {
        "parameters": [
          {
            "name": "where",
            "type": "InsertPosition"
          },
          {
            "name": "data",
            "type": "string"
          }
        ],
        "return": {
          "text": "void"
        }
      }
    ],
    "matches": [
      {
        "parameters": [
          {
            "name": "selectors",
            "type": "string"
          }
        ],
        "return": {
          "text": "BooleanKeyword"
        }
      }
    ],
    "releasePointerCapture": [
      {
        "parameters": [
          {
            "name": "pointerId",
            "type": "number"
          }
        ],
        "return": {
          "text": "void"
        }
      }
    ],
    "removeAttribute": [
      {
        "parameters": [
          {
            "name": "qualifiedName",
            "type": "string"
          }
        ],
        "return": {
          "text": "void"
        }
      }
    ],
    "removeAttributeNS": [
      {
        "parameters": [
          {
            "name": "namespace",
            "type": "string"
          },
          {
            "name": "localName",
            "type": "string"
          }
        ],
        "return": {
          "text": "void"
        }
      }
    ],
    "removeAttributeNode": [
      {
        "parameters": [
          {
            "name": "attr",
            "type": "Attr"
          }
        ],
        "return": {
          "text": "Attr"
        }
      }
    ],
    "requestFullscreen": [
      {
        "parameters": [
          {
            "name": "options",
            "type": "FullscreenOptions?"
          }
        ],
        "return": {
          "text": "Promise<void>"
        }
      }
    ],
    "requestPointerLock": [
      {
        "parameters": [],
        "return": {
          "text": "void"
        }
      }
    ],
    "scroll": [
      {
        "parameters": [
          {
            "name": "options",
            "type": "ScrollToOptions?"
          }
        ],
        "return": {
          "text": "void"
        }
      },
      {
        "parameters": [
          {
            "name": "x",
            "type": "number"
          },
          {
            "name": "y",
            "type": "number"
          }
        ],
        "return": {
          "text": "void"
        }
      }
    ],
    "scrollBy": [
      {
        "parameters": [
          {
            "name": "options",
            "type": "ScrollToOptions?"
          }
        ],
        "return": {
          "text": "void"
        }
      },
      {
        "parameters": [
          {
            "name": "x",
            "type": "number"
          },
          {
            "name": "y",
            "type": "number"
          }
        ],
        "return": {
          "text": "void"
        }
      }
    ],
    "scrollIntoView": [
      {
        "parameters": [
          {
            "name": "arg",
            "type": "boolean | ScrollIntoViewOptions?"
          }
        ],
        "return": {
          "text": "void"
        }
      }
    ],
    "scrollTo": [
      {
        "parameters": [
          {
            "name": "options",
            "type": "ScrollToOptions?"
          }
        ],
        "return": {
          "text": "void"
        }
      },
      {
        "parameters": [
          {
            "name": "x",
            "type": "number"
          },
          {
            "name": "y",
            "type": "number"
          }
        ],
        "return": {
          "text": "void"
        }
      }
    ],
    "setAttribute": [
      {
        "parameters": [
          {
            "name": "qualifiedName",
            "type": "string"
          },
          {
            "name": "value",
            "type": "string"
          }
        ],
        "return": {
          "text": "void"
        }
      }
    ],
    "setAttributeNS": [
      {
        "parameters": [
          {
            "name": "namespace",
            "type": "string"
          },
          {
            "name": "qualifiedName",
            "type": "string"
          },
          {
            "name": "value",
            "type": "string"
          }
        ],
        "return": {
          "text": "void"
        }
      }
    ],
    "setAttributeNode": [
      {
        "parameters": [
          {
            "name": "attr",
            "type": "Attr"
          }
        ],
        "return": {
          "text": "Attr"
        }
      }
    ],
    "setAttributeNodeNS": [
      {
        "parameters": [
          {
            "name": "attr",
            "type": "Attr"
          }
        ],
        "return": {
          "text": "Attr"
        }
      }
    ],
    "setPointerCapture": [
      {
        "parameters": [
          {
            "name": "pointerId",
            "type": "number"
          }
        ],
        "return": {
          "text": "void"
        }
      }
    ],
    "toggleAttribute": [
      {
        "parameters": [
          {
            "name": "qualifiedName",
            "type": "string"
          },
          {
            "name": "force",
            "type": "boolean?"
          }
        ],
        "return": {
          "text": "BooleanKeyword"
        }
      }
    ],
    "webkitMatchesSelector": [
      {
        "parameters": [
          {
            "name": "selectors",
            "type": "string"
          }
        ],
        "return": {
          "text": "BooleanKeyword"
        }
      }
    ],
    "appendChild": [
      {
        "parameters": [
          {
            "name": "node",
            "type": "T"
          }
        ],
        "return": {
          "text": "T"
        }
      }
    ],
    "cloneNode": [
      {
        "parameters": [
          {
            "name": "deep",
            "type": "boolean?"
          }
        ],
        "return": {
          "text": "Node"
        }
      }
    ],
    "compareDocumentPosition": [
      {
        "parameters": [
          {
            "name": "other",
            "type": "Node"
          }
        ],
        "return": {
          "text": "NumberKeyword"
        }
      }
    ],
    "contains": [
      {
        "parameters": [
          {
            "name": "other",
            "type": "Node"
          }
        ],
        "return": {
          "text": "BooleanKeyword"
        }
      }
    ],
    "getRootNode": [
      {
        "parameters": [
          {
            "name": "options",
            "type": "GetRootNodeOptions?"
          }
        ],
        "return": {
          "text": "Node"
        }
      }
    ],
    "hasChildNodes": [
      {
        "parameters": [],
        "return": {
          "text": "BooleanKeyword"
        }
      }
    ],
    "insertBefore": [
      {
        "parameters": [
          {
            "name": "node",
            "type": "T"
          },
          {
            "name": "child",
            "type": "Node"
          }
        ],
        "return": {
          "text": "T"
        }
      }
    ],
    "isDefaultNamespace": [
      {
        "parameters": [
          {
            "name": "namespace",
            "type": "string"
          }
        ],
        "return": {
          "text": "BooleanKeyword"
        }
      }
    ],
    "isEqualNode": [
      {
        "parameters": [
          {
            "name": "otherNode",
            "type": "Node"
          }
        ],
        "return": {
          "text": "BooleanKeyword"
        }
      }
    ],
    "isSameNode": [
      {
        "parameters": [
          {
            "name": "otherNode",
            "type": "Node"
          }
        ],
        "return": {
          "text": "BooleanKeyword"
        }
      }
    ],
    "lookupNamespaceURI": [
      {
        "parameters": [
          {
            "name": "prefix",
            "type": "string"
          }
        ],
        "return": {
          "text": "string"
        }
      }
    ],
    "lookupPrefix": [
      {
        "parameters": [
          {
            "name": "namespace",
            "type": "string"
          }
        ],
        "return": {
          "text": "string"
        }
      }
    ],
    "normalize": [
      {
        "parameters": [],
        "return": {
          "text": "void"
        }
      }
    ],
    "removeChild": [
      {
        "parameters": [
          {
            "name": "child",
            "type": "T"
          }
        ],
        "return": {
          "text": "T"
        }
      }
    ],
    "replaceChild": [
      {
        "parameters": [
          {
            "name": "node",
            "type": "Node"
          },
          {
            "name": "child",
            "type": "T"
          }
        ],
        "return": {
          "text": "T"
        }
      }
    ],
    "dispatchEvent": [
      {
        "parameters": [
          {
            "name": "event",
            "type": "Event"
          }
        ],
        "return": {
          "text": "BooleanKeyword"
        }
      }
    ],
    "animate": [
      {
        "parameters": [
          {
            "name": "keyframes",
            "type": "Keyframe[] | PropertyIndexedKeyframes"
          },
          {
            "name": "options",
            "type": "number | KeyframeAnimationOptions?"
          }
        ],
        "return": {
          "text": "Animation"
        }
      }
    ],
    "getAnimations": [
      {
        "parameters": [
          {
            "name": "options",
            "type": "GetAnimationsOptions?"
          }
        ],
        "return": {
          "text": "ArrayType"
        }
      }
    ],
    "after": [
      {
        "parameters": [
          {
            "name": "nodes",
            "type": "(string | Node)[]"
          }
        ],
        "return": {
          "text": "void"
        }
      }
    ],
    "before": [
      {
        "parameters": [
          {
            "name": "nodes",
            "type": "(string | Node)[]"
          }
        ],
        "return": {
          "text": "void"
        }
      }
    ],
    "remove": [
      {
        "parameters": [],
        "return": {
          "text": "void"
        }
      }
    ],
    "replaceWith": [
      {
        "parameters": [
          {
            "name": "nodes",
            "type": "(string | Node)[]"
          }
        ],
        "return": {
          "text": "void"
        }
      }
    ],
    "append": [
      {
        "parameters": [
          {
            "name": "nodes",
            "type": "(string | Node)[]"
          }
        ],
        "return": {
          "text": "void"
        }
      }
    ],
    "prepend": [
      {
        "parameters": [
          {
            "name": "nodes",
            "type": "(string | Node)[]"
          }
        ],
        "return": {
          "text": "void"
        }
      }
    ],
    "querySelector": [
      {
        "parameters": [
          {
            "name": "selectors",
            "type": "K"
          }
        ],
        "return": {
          "text": "HTMLElementTagNameMap[K]"
        }
      },
      {
        "parameters": [
          {
            "name": "selectors",
            "type": "K"
          }
        ],
        "return": {
          "text": "SVGElementTagNameMap[K]"
        }
      },
      {
        "parameters": [
          {
            "name": "selectors",
            "type": "K"
          }
        ],
        "return": {
          "text": "MathMLElementTagNameMap[K]"
        }
      },
      {
        "parameters": [
          {
            "name": "selectors",
            "type": "K"
          }
        ],
        "return": {
          "text": "HTMLElementDeprecatedTagNameMap[K]"
        }
      },
      {
        "parameters": [
          {
            "name": "selectors",
            "type": "string"
          }
        ],
        "return": {
          "text": "E"
        }
      }
    ],
    "querySelectorAll": [
      {
        "parameters": [
          {
            "name": "selectors",
            "type": "K"
          }
        ],
        "return": {
          "text": "NodeListOf<HTMLElementTagNameMap[K]>"
        }
      },
      {
        "parameters": [
          {
            "name": "selectors",
            "type": "K"
          }
        ],
        "return": {
          "text": "NodeListOf<SVGElementTagNameMap[K]>"
        }
      },
      {
        "parameters": [
          {
            "name": "selectors",
            "type": "K"
          }
        ],
        "return": {
          "text": "NodeListOf<MathMLElementTagNameMap[K]>"
        }
      },
      {
        "parameters": [
          {
            "name": "selectors",
            "type": "K"
          }
        ],
        "return": {
          "text": "NodeListOf<HTMLElementDeprecatedTagNameMap[K]>"
        }
      },
      {
        "parameters": [
          {
            "name": "selectors",
            "type": "string"
          }
        ],
        "return": {
          "text": "NodeListOf<E>"
        }
      }
    ],
    "replaceChildren": [
      {
        "parameters": [
          {
            "name": "nodes",
            "type": "(string | Node)[]"
          }
        ],
        "return": {
          "text": "void"
        }
      }
    ],
    "blur": [
      {
        "parameters": [],
        "return": {
          "text": "void"
        }
      }
    ],
    "focus": [
      {
        "parameters": [
          {
            "name": "options",
            "type": "FocusOptions?"
          }
        ],
        "return": {
          "text": "void"
        }
      }
    ]
  },
  "unions": {
    "InsertPosition": [
      "\"afterbegin\"",
      "\"afterend\"",
      "\"beforebegin\"",
      "\"beforeend\""
    ]
  }
}