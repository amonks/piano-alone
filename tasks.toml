[[task]]
  id = "build"
  type = "short"
  dependencies = ["build-templates", "build-wasm", "generate", "generate-canvas-api-wrapper"]
  cmd = "go build -o ./serve ./gameserver"

[[task]]
  id = "start"
  type = "long"
  cmd = "./serve"

[[task]]
  id = "dev"
  type = "long"
  dependencies = ["generate", "build-wasm", "build-templates", "build-css"]
  watch = ["**/*.go"]
  cmd = "go run ./gameserver"

[[task]]
  id = "test"
  type = "short"
  dependencies = ["generate", "build-wasm"]
  cmd = """
    go test ./...
    go vet ./...
    go run honnef.co/go/tools/cmd/staticcheck ./...
    go run golang.org/x/vuln/cmd/govulncheck ./...
  """

[[task]]
  id = "build-css"
  type = "short"
  cmd = "./node_modules/.bin/tailwindcss -i ./css/style.css -o ./templates/style.css"
  watch = ["./css/**", "./templates/*.templ"]

[[task]]
  id = "build-client"
  type = "short"
  dependencies = ["generate"]
  cmd = """
    set -xeuo pipefail

    CGO_ENABLED=1 GOOS=darwin GOARCH=amd64 \
      go build -o macos-client-amd64 ./gamecontroller
    CGO_ENABLED=1 GOOS=darwin GOARCH=arm64 \
      go build -o macos-client-arm64 ./gamecontroller

    lipo \
      -output ./macos-client-universal \
      -create ./macos-client-arm64 ./macos-client-amd64

    rm ./macos-client-arm64 ./macos-client-amd64

    codesign \
      --keychain buildagent \
      -s 'Developer ID Application: Andrew Monks (89WR6ARSCL)' \
      --timestamp \
      --options runtime \
      ./macos-client-universal

    /usr/bin/ditto -c -k \
      --keepParent \
      ./macos-client-universal \
      ./macos-client-universal.zip

    xcrun notarytool submit \
      -f json \
      --apple-id a@monks.co \
      --team-id 89WR6ARSCL \
      --password $APP_SPECIFIC_PASSWORD \
      --wait ./macos-client-universal.zip \
      2>&1 | tee /tmp/notarization_info.json

    rm macos-client-universal.zip

  """

[[task]]
  id = "build-wasm"
  type = "short"
  watch = ["**/*.go"]
  dependencies = ["generate", "generate-canvas-api-wrapper"]
  cmd = "GOOS=js GOARCH=wasm go build -o main.wasm ./gameplayer"

[[task]]
  id = "build-templates"
  type = "short"
  watch = ["templates/*.templ"]
  cmd = "go run github.com/a-h/templ/cmd/templ generate"

[[task]]
  id = "generate"
  type = "short"
  cmd = "go generate ./..."

[[task]]
  id = "generate-canvas-api-wrapper"
  type = "short"
  watch = ["generate_canvas_api_wrapper/main.ts", "generate_canvas_api_wrapper/package.json"]
  cmd = """
    cd generate_canvas_api_wrapper
    rm dist/*
    yarn
    yarn tsc
    node dist/main.js
    mv out.go ../c2d/c2d_wasm.go
    go fmt ../c2d/c2d_wasm.go
    echo "done building wrapper"
  """
